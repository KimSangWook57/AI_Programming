# 검색 알고리즘
- 검색 => 정렬 필요 => 메모리 요구
- 정렬 불필요 => n.p 문제 => 지역(Local) 최적점

# 이진 검색 트리(가장 대표적)
- 정렬을 동반하지 않음

# 코딩 테스트 관련
- 1. 그래프 문제 => 트리를 해결
- 2. 트리를 문제 => 트리로 해결 (재귀) 
	-> Java는 재귀 쓰지 않음 
	-> 파이썬(정의해줘야 함)과 JS(크롬 O, 사파리 X)는 재귀 가능
- 3. 정렬 관련 X => 검색 문제(정렬 중 특정 문자 빼내기 등)
- 4. LinkedList, Stact, Queue는 만들어 쓰면 망함 
	-> 기본 자료구조는 언어에서 제공하는 것을 쓰자. 

# 파이썬으로 프로그램 짜기
# 언덕 등반 알고리즘

# 객체 = 상태 + 메서드
# 메서드 => 2) 상태를 변경하는 방법
	    1) 계약

# 속성 => 1) 메모리에 위치한 객체의 속성값 

# 식 => 값 => 순수함수(오로지 값만 나온다.)
# 문장 => 값 or 상태 => 리턴값이 값일 수도 있고 상태일 수도 있다.

# 1. 함수 작성 가능
# 2. 파일 읽기 가능
# 3. 리스트 사용 가능
# 4. 반복문 사용 가능

# T1. pytest / Juint => 켄트 백 "테스트 주도 개발"
# T2. 함수 연결해서 사용하는 방법


# Juint
# pytest - 테스트 주도 개발
# tailwindcss, bootstrap

# 제우스(서버)
# JPA + MyBatis

- for / while
- foreach ... => 반복자
	- generator
- async / await

# JS => ES6
# ES6 imp => Google, MS, Apple, Mozila