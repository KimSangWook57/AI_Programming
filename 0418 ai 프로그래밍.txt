java로 뭘 만들어봐라!
사용자가 어떻게 사용할지를 생각해봐라!

파이썬으로 프로그램을 짠다면?

if __name__ == "__main__":
    p = create_problem("./data/Convex.txt")
    describe_problem(p)
    solution = random_init(p)
    minimum = evaluate(solution, p)
    print(f"{minimum}")

# 언덕 등반 알고리즘
# 특정 좌표(x, y)를 기준으로 가장 높/낮은 값을 찾는다.
# 좌표를 기준으로 좌우값을 조금 더 살펴보자!

# 그래프(간선과 정점으로 구성된 자료구조) => TSP
# TSP는 간선의 합이 최소임을 원함
# TSP는 어디서 시작할지가 중요하다! 
# 1) 랜덤 위치 사용 => 적정값이라고 가정하기
# 2) 랜덤으로 하는데, 좌우를 둘러봐라! => 지역 최적을 검색해서 전역을 최적화시킨다.
# 내 코드는 100번(하이퍼 파라미터) 내로 최적값을 찾아내는 것이다!

# TSP
## 언덕 등반 알고리즘 사용법
## 1) 정점 => 인접행렬
# 그래프를 매트릭스로, 매트릭스를 그래프로 바꾸는 법을 기억하자.
- G->M M->G (NetworkX)
## 2) 거리 => 맨하탄, 유클리드 => 테이블
## 3) 계산(최단거리) => 최적일까?

## First Choice
## 언덕 등반 (전역 검색)
## + Mutation(임의의 자료, Noise)


# 간선
# - 방향성 O => 네트워크
# - 방향성 X => 순수 그래프(조합 그래프)

# (8, 31) => 좌표 형식
# 좌표는 리스트로 만들면 안된다!!! -> 튜플로 만들어라!

# 그래프로 인접행렬을 만들어야 한다!!!
# gnn 추천프로그램

# sympy - 수식 정렬 프로그램